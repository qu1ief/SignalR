@page

@{
    var users = (List<AppUser>)ViewBag.Users;
}
<div class="container">
     <div class="row">
        <div class="col-6">
            <div class="row p-1">
                <div class="col-1">User</div>
                <div class="col-5"><input type="text" id="userInput" /></div>
            </div>
            <div class="row p-1">
                <div class="col-1">Message</div>
                <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
            </div>
            <div class="row p-1">
                <div class="col-6 text-end">
                    <input type="button" id="sendButton" value="Send Message" />
                </div>
            </div>
            <div class="row p-1">
                <div class="col-6">
                    <hr />
                </div>
            </div>
            <div class="row p-1">
                <div class="col-6">
                    <ul id="messagesList"></ul>
                </div>
            </div>
        </div>
        <div class="col-6">

            <ul class="list-group">
                @foreach (var user in users)
                {
                    <li  id="@user.Id" class="list-group-item">
                        <span style=" display : inline-block;
            width:50px;
            height:50px;

            border-radius: 50%;" class="@(user.ConnectionId != null?"online":"ofline")">
                        <a href="/chat/senduser/@user.Id">send message</a>
                    </span> @user.Fulname</li>
                }
            
              
            </ul>
        </div>
     </div>
</div>
@section scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();
        connection.start();
        console.log(connection);
        document.getElementById("sendButton").addEventListener("click", function (event) {
            var user = document.getElementById("userInput").value;
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message);

        event.preventDefault();
        });


        connection.on("ReceiveMessage", function (a, b, c) {
            var li = document.createElement("li");

            document.getElementById("messagesList").appendChild(li);
            li.textContent = `${a} says ${b}  ${c}`;

        });


        connection.on("userconnect", function (id) {
            document.getElementById(id).firstElementChild.classList.add("online")
            document.getElementById(id).firstElementChild.classList.remove("ofline")
        })

        connection.on("userdisconnect", function (id) {
            document.getElementById(id).firstElementChild.classList.add("ofline")
            document.getElementById(id).firstElementChild.classList.remove("online")
        })

        connection.on("sendMessageSpecUser", function (id) {
            alert(id);
        })


    </script>
}